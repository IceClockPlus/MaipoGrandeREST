//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatoMaipo
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class DBEntities : DbContext
    {
        public DBEntities()
            : base("name=DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<PAIS> PAIS { get; set; }
        public DbSet<ROL> ROL { get; set; }
        public DbSet<USUARIO> USUARIO { get; set; }
        public DbSet<CLIENTE> CLIENTE { get; set; }
        public DbSet<ESTADOPEDIDO> ESTADOPEDIDO { get; set; }
        public DbSet<PEDIDO> PEDIDO { get; set; }
        public DbSet<DETALLEPEDIDO> DETALLEPEDIDO { get; set; }
        public DbSet<PRODUCTO> PRODUCTO { get; set; }
        public DbSet<CONTRATO> CONTRATO { get; set; }
        public DbSet<PRODUCTOR> PRODUCTOR { get; set; }
        public DbSet<OFERTAPRODUCTO> OFERTAPRODUCTO { get; set; }
        public DbSet<SUBASTA> SUBASTA { get; set; }
        public DbSet<ESTADOSUBASTA> ESTADOSUBASTA { get; set; }
        public DbSet<OFERTASUBASTA> OFERTASUBASTA { get; set; }
        public DbSet<TIPOTRANSPORTE> TIPOTRANSPORTE { get; set; }
        public DbSet<TRANSPORTISTA> TRANSPORTISTA { get; set; }
        public DbSet<PRODUCCION> PRODUCCION { get; set; }
        public DbSet<PARTICIPACION> PARTICIPACION { get; set; }
    
        public virtual int SP_INSERT_PRODUCTO(string nOMBREPRODUCTO, Nullable<decimal> pRECIOESTIMADO, string iMAGENPRODUCTO, string bANNERPRODUCTO)
        {
            var nOMBREPRODUCTOParameter = nOMBREPRODUCTO != null ?
                new ObjectParameter("NOMBREPRODUCTO", nOMBREPRODUCTO) :
                new ObjectParameter("NOMBREPRODUCTO", typeof(string));
    
            var pRECIOESTIMADOParameter = pRECIOESTIMADO.HasValue ?
                new ObjectParameter("PRECIOESTIMADO", pRECIOESTIMADO) :
                new ObjectParameter("PRECIOESTIMADO", typeof(decimal));
    
            var iMAGENPRODUCTOParameter = iMAGENPRODUCTO != null ?
                new ObjectParameter("IMAGENPRODUCTO", iMAGENPRODUCTO) :
                new ObjectParameter("IMAGENPRODUCTO", typeof(string));
    
            var bANNERPRODUCTOParameter = bANNERPRODUCTO != null ?
                new ObjectParameter("BANNERPRODUCTO", bANNERPRODUCTO) :
                new ObjectParameter("BANNERPRODUCTO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_PRODUCTO", nOMBREPRODUCTOParameter, pRECIOESTIMADOParameter, iMAGENPRODUCTOParameter, bANNERPRODUCTOParameter);
        }
    
        public virtual int SP_INSERT_PEDIDO(Nullable<System.DateTime> fECHAPEDIDO, Nullable<System.DateTime> fECHAENTREGA, string dIRECCIONPEDIDO, Nullable<decimal> iDCLIENTE, Nullable<decimal> iDESTADOPEDIDO, string cIUDAD, ObjectParameter rESULTADO)
        {
            var fECHAPEDIDOParameter = fECHAPEDIDO.HasValue ?
                new ObjectParameter("FECHAPEDIDO", fECHAPEDIDO) :
                new ObjectParameter("FECHAPEDIDO", typeof(System.DateTime));
    
            var fECHAENTREGAParameter = fECHAENTREGA.HasValue ?
                new ObjectParameter("FECHAENTREGA", fECHAENTREGA) :
                new ObjectParameter("FECHAENTREGA", typeof(System.DateTime));
    
            var dIRECCIONPEDIDOParameter = dIRECCIONPEDIDO != null ?
                new ObjectParameter("DIRECCIONPEDIDO", dIRECCIONPEDIDO) :
                new ObjectParameter("DIRECCIONPEDIDO", typeof(string));
    
            var iDCLIENTEParameter = iDCLIENTE.HasValue ?
                new ObjectParameter("IDCLIENTE", iDCLIENTE) :
                new ObjectParameter("IDCLIENTE", typeof(decimal));
    
            var iDESTADOPEDIDOParameter = iDESTADOPEDIDO.HasValue ?
                new ObjectParameter("IDESTADOPEDIDO", iDESTADOPEDIDO) :
                new ObjectParameter("IDESTADOPEDIDO", typeof(decimal));
    
            var cIUDADParameter = cIUDAD != null ?
                new ObjectParameter("CIUDAD", cIUDAD) :
                new ObjectParameter("CIUDAD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_PEDIDO", fECHAPEDIDOParameter, fECHAENTREGAParameter, dIRECCIONPEDIDOParameter, iDCLIENTEParameter, iDESTADOPEDIDOParameter, cIUDADParameter, rESULTADO);
        }
    
        public virtual int SP_ACTUALIZAR_PEDIDO(Nullable<decimal> pID, Nullable<System.DateTime> pFECHACREACION, Nullable<System.DateTime> pFECHATERMINO, string pDIRECCION, Nullable<decimal> pIDCLIENTE, Nullable<decimal> pIDESTADO, string pCIUDAD, string pPAIS)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("PID", pID) :
                new ObjectParameter("PID", typeof(decimal));
    
            var pFECHACREACIONParameter = pFECHACREACION.HasValue ?
                new ObjectParameter("PFECHACREACION", pFECHACREACION) :
                new ObjectParameter("PFECHACREACION", typeof(System.DateTime));
    
            var pFECHATERMINOParameter = pFECHATERMINO.HasValue ?
                new ObjectParameter("PFECHATERMINO", pFECHATERMINO) :
                new ObjectParameter("PFECHATERMINO", typeof(System.DateTime));
    
            var pDIRECCIONParameter = pDIRECCION != null ?
                new ObjectParameter("PDIRECCION", pDIRECCION) :
                new ObjectParameter("PDIRECCION", typeof(string));
    
            var pIDCLIENTEParameter = pIDCLIENTE.HasValue ?
                new ObjectParameter("PIDCLIENTE", pIDCLIENTE) :
                new ObjectParameter("PIDCLIENTE", typeof(decimal));
    
            var pIDESTADOParameter = pIDESTADO.HasValue ?
                new ObjectParameter("PIDESTADO", pIDESTADO) :
                new ObjectParameter("PIDESTADO", typeof(decimal));
    
            var pCIUDADParameter = pCIUDAD != null ?
                new ObjectParameter("PCIUDAD", pCIUDAD) :
                new ObjectParameter("PCIUDAD", typeof(string));
    
            var pPAISParameter = pPAIS != null ?
                new ObjectParameter("PPAIS", pPAIS) :
                new ObjectParameter("PPAIS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACTUALIZAR_PEDIDO", pIDParameter, pFECHACREACIONParameter, pFECHATERMINOParameter, pDIRECCIONParameter, pIDCLIENTEParameter, pIDESTADOParameter, pCIUDADParameter, pPAISParameter);
        }
    
        public virtual int SP_ACTUALIZAR_CONTRATO(Nullable<decimal> pID, Nullable<System.DateTime> pFECHACREACION, Nullable<System.DateTime> pFECHATERMINO, Nullable<decimal> pPORCCOMISION, string pVIGENTE, Nullable<decimal> pIDPRODUCTOR)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("PID", pID) :
                new ObjectParameter("PID", typeof(decimal));
    
            var pFECHACREACIONParameter = pFECHACREACION.HasValue ?
                new ObjectParameter("PFECHACREACION", pFECHACREACION) :
                new ObjectParameter("PFECHACREACION", typeof(System.DateTime));
    
            var pFECHATERMINOParameter = pFECHATERMINO.HasValue ?
                new ObjectParameter("PFECHATERMINO", pFECHATERMINO) :
                new ObjectParameter("PFECHATERMINO", typeof(System.DateTime));
    
            var pPORCCOMISIONParameter = pPORCCOMISION.HasValue ?
                new ObjectParameter("PPORCCOMISION", pPORCCOMISION) :
                new ObjectParameter("PPORCCOMISION", typeof(decimal));
    
            var pVIGENTEParameter = pVIGENTE != null ?
                new ObjectParameter("PVIGENTE", pVIGENTE) :
                new ObjectParameter("PVIGENTE", typeof(string));
    
            var pIDPRODUCTORParameter = pIDPRODUCTOR.HasValue ?
                new ObjectParameter("PIDPRODUCTOR", pIDPRODUCTOR) :
                new ObjectParameter("PIDPRODUCTOR", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACTUALIZAR_CONTRATO", pIDParameter, pFECHACREACIONParameter, pFECHATERMINOParameter, pPORCCOMISIONParameter, pVIGENTEParameter, pIDPRODUCTORParameter);
        }
    
        public virtual int SP_ACTUALIZAR_SUBASTA(Nullable<decimal> pID, Nullable<System.DateTime> pFECHACREACION, Nullable<System.DateTime> pFECHATERMINO, Nullable<decimal> pIDPEDIDO, Nullable<decimal> pIDESTADOSUBASTA)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("PID", pID) :
                new ObjectParameter("PID", typeof(decimal));
    
            var pFECHACREACIONParameter = pFECHACREACION.HasValue ?
                new ObjectParameter("PFECHACREACION", pFECHACREACION) :
                new ObjectParameter("PFECHACREACION", typeof(System.DateTime));
    
            var pFECHATERMINOParameter = pFECHATERMINO.HasValue ?
                new ObjectParameter("PFECHATERMINO", pFECHATERMINO) :
                new ObjectParameter("PFECHATERMINO", typeof(System.DateTime));
    
            var pIDPEDIDOParameter = pIDPEDIDO.HasValue ?
                new ObjectParameter("PIDPEDIDO", pIDPEDIDO) :
                new ObjectParameter("PIDPEDIDO", typeof(decimal));
    
            var pIDESTADOSUBASTAParameter = pIDESTADOSUBASTA.HasValue ?
                new ObjectParameter("PIDESTADOSUBASTA", pIDESTADOSUBASTA) :
                new ObjectParameter("PIDESTADOSUBASTA", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACTUALIZAR_SUBASTA", pIDParameter, pFECHACREACIONParameter, pFECHATERMINOParameter, pIDPEDIDOParameter, pIDESTADOSUBASTAParameter);
        }
    
        public virtual int SP_ELIMINAR_CONTRATO(Nullable<decimal> pID)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("PID", pID) :
                new ObjectParameter("PID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ELIMINAR_CONTRATO", pIDParameter);
        }
    
        public virtual int SP_ELIMINAR_SUBASTA(Nullable<decimal> pID)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("PID", pID) :
                new ObjectParameter("PID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ELIMINAR_SUBASTA", pIDParameter);
        }
    
        public virtual int SP_INSERTAR_CONTRATO(Nullable<System.DateTime> pFECHACREACION, Nullable<System.DateTime> pFECHATERMINO, Nullable<decimal> pPORCCOMISION, string pVIGENTE, Nullable<decimal> pIDPRODUCTOR)
        {
            var pFECHACREACIONParameter = pFECHACREACION.HasValue ?
                new ObjectParameter("PFECHACREACION", pFECHACREACION) :
                new ObjectParameter("PFECHACREACION", typeof(System.DateTime));
    
            var pFECHATERMINOParameter = pFECHATERMINO.HasValue ?
                new ObjectParameter("PFECHATERMINO", pFECHATERMINO) :
                new ObjectParameter("PFECHATERMINO", typeof(System.DateTime));
    
            var pPORCCOMISIONParameter = pPORCCOMISION.HasValue ?
                new ObjectParameter("PPORCCOMISION", pPORCCOMISION) :
                new ObjectParameter("PPORCCOMISION", typeof(decimal));
    
            var pVIGENTEParameter = pVIGENTE != null ?
                new ObjectParameter("PVIGENTE", pVIGENTE) :
                new ObjectParameter("PVIGENTE", typeof(string));
    
            var pIDPRODUCTORParameter = pIDPRODUCTOR.HasValue ?
                new ObjectParameter("PIDPRODUCTOR", pIDPRODUCTOR) :
                new ObjectParameter("PIDPRODUCTOR", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERTAR_CONTRATO", pFECHACREACIONParameter, pFECHATERMINOParameter, pPORCCOMISIONParameter, pVIGENTEParameter, pIDPRODUCTORParameter);
        }
    
        public virtual int SP_INSERT_SUBASTA(Nullable<System.DateTime> pFECHAINICIO, Nullable<System.DateTime> pFECHATERMINO, Nullable<decimal> pIDESTADOSUBASTA, Nullable<decimal> pIDPEDIDO)
        {
            var pFECHAINICIOParameter = pFECHAINICIO.HasValue ?
                new ObjectParameter("PFECHAINICIO", pFECHAINICIO) :
                new ObjectParameter("PFECHAINICIO", typeof(System.DateTime));
    
            var pFECHATERMINOParameter = pFECHATERMINO.HasValue ?
                new ObjectParameter("PFECHATERMINO", pFECHATERMINO) :
                new ObjectParameter("PFECHATERMINO", typeof(System.DateTime));
    
            var pIDESTADOSUBASTAParameter = pIDESTADOSUBASTA.HasValue ?
                new ObjectParameter("PIDESTADOSUBASTA", pIDESTADOSUBASTA) :
                new ObjectParameter("PIDESTADOSUBASTA", typeof(decimal));
    
            var pIDPEDIDOParameter = pIDPEDIDO.HasValue ?
                new ObjectParameter("PIDPEDIDO", pIDPEDIDO) :
                new ObjectParameter("PIDPEDIDO", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_SUBASTA", pFECHAINICIOParameter, pFECHATERMINOParameter, pIDESTADOSUBASTAParameter, pIDPEDIDOParameter);
        }
    
        public virtual int SP_INSERT_USUARIO(string pNOMBREUSUARIO, string pCONTRASENIA, string pISHABILITADO, Nullable<decimal> pIDROL, string pTOKEN, string pCORREO, Nullable<decimal> pIDPAIS)
        {
            var pNOMBREUSUARIOParameter = pNOMBREUSUARIO != null ?
                new ObjectParameter("PNOMBREUSUARIO", pNOMBREUSUARIO) :
                new ObjectParameter("PNOMBREUSUARIO", typeof(string));
    
            var pCONTRASENIAParameter = pCONTRASENIA != null ?
                new ObjectParameter("PCONTRASENIA", pCONTRASENIA) :
                new ObjectParameter("PCONTRASENIA", typeof(string));
    
            var pISHABILITADOParameter = pISHABILITADO != null ?
                new ObjectParameter("PISHABILITADO", pISHABILITADO) :
                new ObjectParameter("PISHABILITADO", typeof(string));
    
            var pIDROLParameter = pIDROL.HasValue ?
                new ObjectParameter("PIDROL", pIDROL) :
                new ObjectParameter("PIDROL", typeof(decimal));
    
            var pTOKENParameter = pTOKEN != null ?
                new ObjectParameter("PTOKEN", pTOKEN) :
                new ObjectParameter("PTOKEN", typeof(string));
    
            var pCORREOParameter = pCORREO != null ?
                new ObjectParameter("PCORREO", pCORREO) :
                new ObjectParameter("PCORREO", typeof(string));
    
            var pIDPAISParameter = pIDPAIS.HasValue ?
                new ObjectParameter("PIDPAIS", pIDPAIS) :
                new ObjectParameter("PIDPAIS", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_USUARIO", pNOMBREUSUARIOParameter, pCONTRASENIAParameter, pISHABILITADOParameter, pIDROLParameter, pTOKENParameter, pCORREOParameter, pIDPAISParameter);
        }
    
        public virtual int SP_UPDATE_DETALLE_PEDIDO(Nullable<decimal> pID, Nullable<decimal> pIDPRODUCTO, Nullable<decimal> pCANTIDAD, string pCALIDAD, string pESTADO, Nullable<decimal> pIDPRODUCTOR)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("PID", pID) :
                new ObjectParameter("PID", typeof(decimal));
    
            var pIDPRODUCTOParameter = pIDPRODUCTO.HasValue ?
                new ObjectParameter("PIDPRODUCTO", pIDPRODUCTO) :
                new ObjectParameter("PIDPRODUCTO", typeof(decimal));
    
            var pCANTIDADParameter = pCANTIDAD.HasValue ?
                new ObjectParameter("PCANTIDAD", pCANTIDAD) :
                new ObjectParameter("PCANTIDAD", typeof(decimal));
    
            var pCALIDADParameter = pCALIDAD != null ?
                new ObjectParameter("PCALIDAD", pCALIDAD) :
                new ObjectParameter("PCALIDAD", typeof(string));
    
            var pESTADOParameter = pESTADO != null ?
                new ObjectParameter("PESTADO", pESTADO) :
                new ObjectParameter("PESTADO", typeof(string));
    
            var pIDPRODUCTORParameter = pIDPRODUCTOR.HasValue ?
                new ObjectParameter("PIDPRODUCTOR", pIDPRODUCTOR) :
                new ObjectParameter("PIDPRODUCTOR", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_DETALLE_PEDIDO", pIDParameter, pIDPRODUCTOParameter, pCANTIDADParameter, pCALIDADParameter, pESTADOParameter, pIDPRODUCTORParameter);
        }
    
        public virtual int SP_INSERT_PARTICIPACION(Nullable<decimal> pIDPRODUCTOR, Nullable<decimal> pIDPEDIDO)
        {
            var pIDPRODUCTORParameter = pIDPRODUCTOR.HasValue ?
                new ObjectParameter("PIDPRODUCTOR", pIDPRODUCTOR) :
                new ObjectParameter("PIDPRODUCTOR", typeof(decimal));
    
            var pIDPEDIDOParameter = pIDPEDIDO.HasValue ?
                new ObjectParameter("PIDPEDIDO", pIDPEDIDO) :
                new ObjectParameter("PIDPEDIDO", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_PARTICIPACION", pIDPRODUCTORParameter, pIDPEDIDOParameter);
        }
    
        public virtual int SP_UPDATE_PARTICIPACION(Nullable<decimal> pID, Nullable<decimal> pIDPRODUCTOR, Nullable<decimal> pIDPEDIDO, string pESTADO)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("PID", pID) :
                new ObjectParameter("PID", typeof(decimal));
    
            var pIDPRODUCTORParameter = pIDPRODUCTOR.HasValue ?
                new ObjectParameter("PIDPRODUCTOR", pIDPRODUCTOR) :
                new ObjectParameter("PIDPRODUCTOR", typeof(decimal));
    
            var pIDPEDIDOParameter = pIDPEDIDO.HasValue ?
                new ObjectParameter("PIDPEDIDO", pIDPEDIDO) :
                new ObjectParameter("PIDPEDIDO", typeof(decimal));
    
            var pESTADOParameter = pESTADO != null ?
                new ObjectParameter("PESTADO", pESTADO) :
                new ObjectParameter("PESTADO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_PARTICIPACION", pIDParameter, pIDPRODUCTORParameter, pIDPEDIDOParameter, pESTADOParameter);
        }
    
        public virtual int SP_UPDATE_OFERTASUBASTA(Nullable<decimal> pIDOFERTA, Nullable<decimal> pPRECIOOFERTA, string pSELECCIONADO, Nullable<System.DateTime> pFECHAOFERTA, Nullable<decimal> pIDTRANSPORTISTA, Nullable<decimal> pIDTIPOTRANSPORTE)
        {
            var pIDOFERTAParameter = pIDOFERTA.HasValue ?
                new ObjectParameter("PIDOFERTA", pIDOFERTA) :
                new ObjectParameter("PIDOFERTA", typeof(decimal));
    
            var pPRECIOOFERTAParameter = pPRECIOOFERTA.HasValue ?
                new ObjectParameter("PPRECIOOFERTA", pPRECIOOFERTA) :
                new ObjectParameter("PPRECIOOFERTA", typeof(decimal));
    
            var pSELECCIONADOParameter = pSELECCIONADO != null ?
                new ObjectParameter("PSELECCIONADO", pSELECCIONADO) :
                new ObjectParameter("PSELECCIONADO", typeof(string));
    
            var pFECHAOFERTAParameter = pFECHAOFERTA.HasValue ?
                new ObjectParameter("PFECHAOFERTA", pFECHAOFERTA) :
                new ObjectParameter("PFECHAOFERTA", typeof(System.DateTime));
    
            var pIDTRANSPORTISTAParameter = pIDTRANSPORTISTA.HasValue ?
                new ObjectParameter("PIDTRANSPORTISTA", pIDTRANSPORTISTA) :
                new ObjectParameter("PIDTRANSPORTISTA", typeof(decimal));
    
            var pIDTIPOTRANSPORTEParameter = pIDTIPOTRANSPORTE.HasValue ?
                new ObjectParameter("PIDTIPOTRANSPORTE", pIDTIPOTRANSPORTE) :
                new ObjectParameter("PIDTIPOTRANSPORTE", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_OFERTASUBASTA", pIDOFERTAParameter, pPRECIOOFERTAParameter, pSELECCIONADOParameter, pFECHAOFERTAParameter, pIDTRANSPORTISTAParameter, pIDTIPOTRANSPORTEParameter);
        }
    
        public virtual int SP_DELETE_PRODUCCION(Nullable<decimal> pIDPRODUCCION)
        {
            var pIDPRODUCCIONParameter = pIDPRODUCCION.HasValue ?
                new ObjectParameter("PIDPRODUCCION", pIDPRODUCCION) :
                new ObjectParameter("PIDPRODUCCION", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETE_PRODUCCION", pIDPRODUCCIONParameter);
        }
    
        public virtual int SP_INSERT_PEDIDO1(Nullable<System.DateTime> pFECHAPEDIDO, Nullable<System.DateTime> pFECHAENTREGA, string pDIRECCION, Nullable<decimal> pIDCLIENTE, Nullable<decimal> pIDESTADOPEDIDO, string pCIUDAD, string pPAIS, ObjectParameter pIDPEDIDO)
        {
            var pFECHAPEDIDOParameter = pFECHAPEDIDO.HasValue ?
                new ObjectParameter("PFECHAPEDIDO", pFECHAPEDIDO) :
                new ObjectParameter("PFECHAPEDIDO", typeof(System.DateTime));
    
            var pFECHAENTREGAParameter = pFECHAENTREGA.HasValue ?
                new ObjectParameter("PFECHAENTREGA", pFECHAENTREGA) :
                new ObjectParameter("PFECHAENTREGA", typeof(System.DateTime));
    
            var pDIRECCIONParameter = pDIRECCION != null ?
                new ObjectParameter("PDIRECCION", pDIRECCION) :
                new ObjectParameter("PDIRECCION", typeof(string));
    
            var pIDCLIENTEParameter = pIDCLIENTE.HasValue ?
                new ObjectParameter("PIDCLIENTE", pIDCLIENTE) :
                new ObjectParameter("PIDCLIENTE", typeof(decimal));
    
            var pIDESTADOPEDIDOParameter = pIDESTADOPEDIDO.HasValue ?
                new ObjectParameter("PIDESTADOPEDIDO", pIDESTADOPEDIDO) :
                new ObjectParameter("PIDESTADOPEDIDO", typeof(decimal));
    
            var pCIUDADParameter = pCIUDAD != null ?
                new ObjectParameter("PCIUDAD", pCIUDAD) :
                new ObjectParameter("PCIUDAD", typeof(string));
    
            var pPAISParameter = pPAIS != null ?
                new ObjectParameter("PPAIS", pPAIS) :
                new ObjectParameter("PPAIS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_PEDIDO1", pFECHAPEDIDOParameter, pFECHAENTREGAParameter, pDIRECCIONParameter, pIDCLIENTEParameter, pIDESTADOPEDIDOParameter, pCIUDADParameter, pPAISParameter, pIDPEDIDO);
        }
    
        public virtual int SP_INSERT_PRODUCCION(Nullable<decimal> pPRECIOPREMIUM, Nullable<decimal> pPRECIOESTANDAR, Nullable<decimal> pPRECIOLOWER, Nullable<decimal> pIDPRODUCTOR, Nullable<decimal> pIDPRODUCTO)
        {
            var pPRECIOPREMIUMParameter = pPRECIOPREMIUM.HasValue ?
                new ObjectParameter("PPRECIOPREMIUM", pPRECIOPREMIUM) :
                new ObjectParameter("PPRECIOPREMIUM", typeof(decimal));
    
            var pPRECIOESTANDARParameter = pPRECIOESTANDAR.HasValue ?
                new ObjectParameter("PPRECIOESTANDAR", pPRECIOESTANDAR) :
                new ObjectParameter("PPRECIOESTANDAR", typeof(decimal));
    
            var pPRECIOLOWERParameter = pPRECIOLOWER.HasValue ?
                new ObjectParameter("PPRECIOLOWER", pPRECIOLOWER) :
                new ObjectParameter("PPRECIOLOWER", typeof(decimal));
    
            var pIDPRODUCTORParameter = pIDPRODUCTOR.HasValue ?
                new ObjectParameter("PIDPRODUCTOR", pIDPRODUCTOR) :
                new ObjectParameter("PIDPRODUCTOR", typeof(decimal));
    
            var pIDPRODUCTOParameter = pIDPRODUCTO.HasValue ?
                new ObjectParameter("PIDPRODUCTO", pIDPRODUCTO) :
                new ObjectParameter("PIDPRODUCTO", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_PRODUCCION", pPRECIOPREMIUMParameter, pPRECIOESTANDARParameter, pPRECIOLOWERParameter, pIDPRODUCTORParameter, pIDPRODUCTOParameter);
        }
    
        public virtual int SP_UPDATE_PRODUCCION(Nullable<decimal> pIDPRODUCCION, Nullable<decimal> pPRECIOPREMIUM, Nullable<decimal> pPRECIOESTANDAR, Nullable<decimal> pPRECIOLOWER, Nullable<decimal> pIDPRODUCTOR, Nullable<decimal> pIDPRODUCTO)
        {
            var pIDPRODUCCIONParameter = pIDPRODUCCION.HasValue ?
                new ObjectParameter("PIDPRODUCCION", pIDPRODUCCION) :
                new ObjectParameter("PIDPRODUCCION", typeof(decimal));
    
            var pPRECIOPREMIUMParameter = pPRECIOPREMIUM.HasValue ?
                new ObjectParameter("PPRECIOPREMIUM", pPRECIOPREMIUM) :
                new ObjectParameter("PPRECIOPREMIUM", typeof(decimal));
    
            var pPRECIOESTANDARParameter = pPRECIOESTANDAR.HasValue ?
                new ObjectParameter("PPRECIOESTANDAR", pPRECIOESTANDAR) :
                new ObjectParameter("PPRECIOESTANDAR", typeof(decimal));
    
            var pPRECIOLOWERParameter = pPRECIOLOWER.HasValue ?
                new ObjectParameter("PPRECIOLOWER", pPRECIOLOWER) :
                new ObjectParameter("PPRECIOLOWER", typeof(decimal));
    
            var pIDPRODUCTORParameter = pIDPRODUCTOR.HasValue ?
                new ObjectParameter("PIDPRODUCTOR", pIDPRODUCTOR) :
                new ObjectParameter("PIDPRODUCTOR", typeof(decimal));
    
            var pIDPRODUCTOParameter = pIDPRODUCTO.HasValue ?
                new ObjectParameter("PIDPRODUCTO", pIDPRODUCTO) :
                new ObjectParameter("PIDPRODUCTO", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_PRODUCCION", pIDPRODUCCIONParameter, pPRECIOPREMIUMParameter, pPRECIOESTANDARParameter, pPRECIOLOWERParameter, pIDPRODUCTORParameter, pIDPRODUCTOParameter);
        }
    }
}
